services:
  highload-nginx:
    image: nginx:latest
    ports:
      - '80:80'
    volumes:
      - ./docker/nginx/config/:/etc/nginx/conf.d/
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    working_dir: '/var/www/html'
    networks:
      - highload-network
    restart: unless-stopped
    tty: true
  highload-app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - ./:/app
      - gosrc:/go
    networks:
      - highload-network
    depends_on:
      highload-pgsql:
        condition: service_healthy
    restart: unless-stopped
  highload-pgsql:
    build: 
      context: ./docker/pgsql
      dockerfile: Dockerfile
    ports:
      - '${PGSQL_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${PGSQL_PASSWORD:-secret}'
      POSTGRES_DB: '${PGSQL_DB}'
      POSTGRES_USER: '${PGSQL_USER}'
      POSTGRES_PASSWORD: '${PGSQL_PASSWORD:-secret}'
    volumes:
      - highload-pgsql:/var/lib/postgresql/data
    networks:
      - highload-network
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${PGSQL_DB}'
        - '-U'
        - '${PGSQL_USER}'
      retries: 3
      timeout: 3s
    restart: unless-stopped

volumes:
  gosrc:
  highload-pgsql:
networks:
  highload-network:
    driver: bridge